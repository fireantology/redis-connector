<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:redis="http://www.mulesoft.org/schema/mule/redis" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
          http://www.mulesoft.org/schema/mule/redis http://www.mulesoft.org/schema/mule/redis/current/mule-redis.xsd
          http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <redis:config name="localRedis"/>

    <flow name="strings-writer">
        <vm:inbound-endpoint path="strings-writer.in"
            exchange-pattern="request-response" />
        <all>
            <redis:set config-ref="localRedis" key="#[message.inboundProperties.key]"/>
            <redis:set config-ref="localRedis" key="#[message.inboundProperties.key].ttl"
                expire="1" />
            <redis:set config-ref="localRedis" key="#[message.inboundProperties.key].other"
                ifNotExists="true" />
            <append-string-transformer message=".foo" />
            <redis:set config-ref="localRedis" key="#[message.inboundProperties.key]"
                ifNotExists="true" />
            <redis:set config-ref="localRedis" key="#[message.inboundProperties.key].value"
                value="#[message.inboundProperties.key]" />
        </all>
    </flow>
    <flow name="strings-reader">
        <vm:inbound-endpoint path="strings-reader.in"
            exchange-pattern="request-response" />
        <redis:get config-ref="localRedis" key="#[message.inboundProperties.key]" />
    </flow>
    <flow name="key-existence">
        <vm:inbound-endpoint path="key-existence.in"
            exchange-pattern="request-response" />
        <redis:exists config-ref="localRedis" key="#[message.inboundProperties.key]" />
    </flow>

    <flow name="incr-decr">
        <vm:inbound-endpoint path="incr-decr.in"
            exchange-pattern="request-response" />
        <redis:increment config-ref="localRedis" key="#[message.inboundProperties.key]" />
        <redis:increment config-ref="localRedis" key="#[message.inboundProperties.key]"
            step="5" />
        <redis:decrement config-ref="localRedis" key="#[message.inboundProperties.key]" />
        <redis:decrement config-ref="localRedis" key="#[message.inboundProperties.key]"
            step="7" />
    </flow>

    <flow name="hashes-writer">
        <vm:inbound-endpoint path="hashes-writer.in"
            exchange-pattern="request-response" />
        <all>
            <redis:hash-set config-ref="localRedis" key="#[message.inboundProperties.key]"
                field="#[message.inboundProperties.field]" />
            <redis:hash-set config-ref="localRedis" key="#[message.inboundProperties.key]"
                field="#[string:#[message.inboundProperties.field].other]"
                ifNotExists="true" />
            <append-string-transformer message=".foo" />
            <redis:hash-set config-ref="localRedis" key="#[message.inboundProperties.key]"
                field="#[message.inboundProperties.field]" ifNotExists="true" />
            <redis:hash-set config-ref="localRedis" key="#[message.inboundProperties.key].value"
                field="#[message.inboundProperties.field]" value="#[message.inboundProperties.key]" />
        </all>
    </flow>
    <flow name="hashes-reader">
        <vm:inbound-endpoint path="hashes-reader.in"
            exchange-pattern="request-response" />
        <redis:hash-get config-ref="localRedis" key="#[message.inboundProperties.key]"
            field="#[message.inboundProperties.field]" />
    </flow>
    <flow name="hashes-incr">
        <vm:inbound-endpoint path="hashes-incr.in"
            exchange-pattern="request-response" />
        <redis:hash-increment config-ref="localRedis" key="#[message.inboundProperties.key]"
            field="#[message.inboundProperties.field]" />
        <redis:hash-increment config-ref="localRedis" key="#[message.inboundProperties.key]"
            field="#[message.inboundProperties.field]" step="-5" />
    </flow>

    <flow name="lists-writer">
        <vm:inbound-endpoint path="lists-writer.in"
            exchange-pattern="request-response" />
        <all>
            <redis:list-push config-ref="localRedis" key="#[message.inboundProperties.key]"
                side="LEFT" ifExists="true" />
            <redis:list-push config-ref="localRedis" key="#[message.inboundProperties.key]"
                side="RIGHT" ifExists="true" />
            <redis:list-push config-ref="localRedis" key="#[message.inboundProperties.key]"
                side="LEFT" />
            <redis:list-push config-ref="localRedis" key="#[message.inboundProperties.key]"
                side="RIGHT" />
            <redis:list-push config-ref="localRedis" key="#[message.inboundProperties.key].value"
                value="#[message.inboundProperties.key]" side="RIGHT" />
        </all>
    </flow>
    <flow name="lists-reader">
        <vm:inbound-endpoint path="lists-reader.in"
            exchange-pattern="request-response" />
        <redis:list-pop config-ref="localRedis" key="#[message.inboundProperties.key]"
            side="#[message.inboundProperties.side]" />
    </flow>

    <flow name="sets-writer">
        <vm:inbound-endpoint path="sets-writer.in"
            exchange-pattern="request-response" />

        <all>
            <redis:set-add config-ref="localRedis" key="#[message.inboundProperties.key]" />
            <redis:set-add config-ref="localRedis" key="#[message.inboundProperties.key]"
                mustSucceed="true" />
            <redis:set-add config-ref="localRedis" key="#[message.inboundProperties.key]" />
            <redis:set-add config-ref="localRedis" key="#[message.inboundProperties.key].value"
                value="#[message.inboundProperties.key]" />
        </all>
    </flow>
    <flow name="sets-reader">
        <vm:inbound-endpoint path="sets-reader.in"
            exchange-pattern="request-response" />
        <all>
            <redis:set-fetch-random-member config-ref="localRedis" key="#[message.inboundProperties.key]" />
            <redis:set-pop config-ref="localRedis" key="#[message.inboundProperties.key]" />
            <redis:set-pop config-ref="localRedis" key="#[message.inboundProperties.key]" />
            <redis:set-pop config-ref="localRedis" key="#[message.inboundProperties.key].value" />
        </all>
    </flow>

    <flow name="sorted-sets-writer">
        <vm:inbound-endpoint path="sorted-sets-writer.in"
            exchange-pattern="request-response" />

        <all>
            <redis:sorted-set-add config-ref="localRedis" key="#[message.inboundProperties.key]"
                score="#[message.inboundProperties.score]" />
            <redis:sorted-set-add config-ref="localRedis" key="#[message.inboundProperties.key]"
                score="#[message.inboundProperties.score]" mustSucceed="true" />
            <redis:sorted-set-add config-ref="localRedis" key="#[message.inboundProperties.key]"
                score="#[message.inboundProperties.score]" />
            <redis:sorted-set-add config-ref="localRedis" key="#[message.inboundProperties.key].value"
                score="#[message.inboundProperties.score]" value="#[message.inboundProperties.key]" />
        </all>
    </flow>
    <flow name="sorted-sets-reader">
        <vm:inbound-endpoint path="sorted-sets-reader.in"
            exchange-pattern="request-response" />
        <all>
            <redis:sorted-set-select-range-by-index config-ref="localRedis"
                key="#[message.inboundProperties.key]" start="0" end="-1" />
            <redis:sorted-set-select-range-by-index config-ref="localRedis"
                key="#[message.inboundProperties.key]" start="0" end="-1"
                order="DESCENDING" />
            <redis:sorted-set-select-range-by-score config-ref="localRedis"
                key="#[message.inboundProperties.key]" min="0.5" max="10" />
            <redis:sorted-set-select-range-by-score config-ref="localRedis"
                key="#[message.inboundProperties.key]" min="10" max="0.5" order="DESCENDING" />
        </all>
    </flow>

    <flow name="sorted-set-incr">
        <vm:inbound-endpoint path="sorted-set-incr.in"
            exchange-pattern="request-response" />
        <all>
            <redis:sorted-set-increment config-ref="localRedis" key="#[message.inboundProperties.key]"
                step="3.14" />
            <redis:sorted-set-increment config-ref="localRedis" key="#[message.inboundProperties.key].value"
                value="#[message.inboundProperties.key]" step="2.72" />
        </all>
    </flow>

    <flow name="key-volatility">
        <vm:inbound-endpoint path="key-volatility.in"
            exchange-pattern="request-response" />

        <redis:set config-ref="localRedis" key="#[message.inboundProperties.key]" />

        <all>
            <redis:expire-at config-ref="localRedis" key="#[message.inboundProperties.key]"
                unixTime="#[message.inboundProperties.expireAtUnixTime]" />
            <redis:expire config-ref="localRedis" key="#[message.inboundProperties.key]"
                seconds="20" />
            <redis:get-ttl config-ref="localRedis" key="#[message.inboundProperties.key]" />
            <redis:persist config-ref="localRedis" key="#[message.inboundProperties.key]" />
            <redis:get-ttl config-ref="localRedis" key="#[message.inboundProperties.key]" />
        </all>
    </flow>
</mule>